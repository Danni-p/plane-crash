(self["webpackChunkplane_crash"]=self["webpackChunkplane_crash"]||[]).push([[896],{6516:(t,e,n)=>{"use strict";n.d(e,{Z:()=>q});var i=n(6304),a=n(3212),o=n(3673),l=n(1959);const c=(0,l.qj)({Z:1e4,Y:5e5,X:0,beta:0,angle:0,startHeight:1e4,startDistance:5e5,flightTime:30,velocityXY:300}),s=c;function u(){return{getZ:(0,o.Fl)((()=>s.Z)),getY:(0,o.Fl)((()=>s.Y)),getX:(0,o.Fl)((()=>s.X)),getVelocityXY:(0,o.Fl)((()=>s.velocityXY)),getMinZDot:(0,o.Fl)((()=>(0,a.xs)(s.startHeight,s.velocityXY,s.startDistance))),getBeta:(0,o.Fl)((()=>s.beta)),getAngle:(0,o.Fl)((()=>s.angle)),getFlightTime:(0,o.Fl)((()=>s.flightTime)),getStartHeight:(0,o.Fl)((()=>s.startHeight)),getStartDistance:(0,o.Fl)((()=>s.startDistance))}}function r(){function t(t){s.Z=Math.round(10*t)/10}function e(t){s.Y=Math.round(10*t)/10}function n(t){s.X=Math.round(10*t)/10}function i(t){s.beta=t}function a(t){s.velocityXY=t}function o(t){s.startDistance=t}function l(t){s.startHeight=t}function c(t){s.angle=t}function u(t){s.flightTime=t}return{commitSetZ:t,commitSetY:e,commitSetX:n,commitSetBeta:i,commitSetAngle:c,commitSetVelocityXY:a,commitSetStartDistance:o,commitSetStartHeight:l,commitSetFlightTime:u}}let m=null;const g=1e3,{getDropFactor:d,getDeflection:h}=(0,i.Z)(),{getMinZDot:f,getX:p,getY:v,getZ:S,getVelocityXY:b,getBeta:Z}=u(),{commitSetZ:w,commitSetAngle:y,commitSetBeta:M,commitSetX:X,commitSetY:Y}=r();function F(){function t(){console.log("start"),m=setInterval(k,g)}function e(){console.log("stop"),m&&clearInterval(m)}function n(){s.X=0,s.Y=s.startDistance,s.Z=s.startHeight,s.angle=0,s.beta=0,s.velocityXY=300}return{startSimulation:t,stopSimulation:e,resetState:n}}function k(){const t=(0,a.hQ)(f.value,d.value),e=S.value-t*(g/1e3),n=h.value*(b.value*(g/1e3))/2,i=Math.sqrt(Math.pow(b.value*(g/1e3),2)-Math.pow(n,2)),o=Math.atan2(i,n),l=-Z.value/180*Math.PI,c=Math.cos(l)*n-Math.sin(l)*i,s=Math.sin(l)*n+Math.cos(l)*i,u=90-180*o/Math.PI,r=p.value+c,m=v.value-s,F=Z.value+u,k=90*h.value;console.log("test rots",n,i,o,l),console.log("test deltas",c,s,u),console.log("test next",r,m,F),X(r),Y(m),w(e),M(F),y(k)}const W=()=>Object.assign(Object.assign(Object.assign({},F()),u()),r()),q=W},3212:(t,e,n)=>{"use strict";n.d(e,{xs:()=>i,$H:()=>a,hQ:()=>o,u9:()=>l});const i=(t,e,n)=>t*e/(2*n),a=t=>o(t,0),o=(t,e)=>t*(2-e),l=(t,e)=>Math.round(Math.sqrt(t*t+e*e)/1e3*10)/10},3896:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>k});var i=n(3673);const a={class:"col-md-6 col-12 q-pa-md"},o=(0,i.Wm)("div",{class:"text-h6"},"Kürzeste Flugzeit zur Insel",-1),l=(0,i.Wm)("div",{class:"text-subtitle2"},"bei perfektem Manöver",-1),c={class:"row items-center"},s={class:"col"},u=(0,i.Uk)("min"),r=(0,i.Wm)("div",{class:"row"}," Erklärung: Wenn das Flugzeug stets seinen perfekten Kurs beibehält und niemals neu ausgerichtet werden muss, erreicht es die Insel in der Zeit t. Diese Zeit t kann hier definiert werden. ",-1);function m(t,e,n,m,g,d){const h=(0,i.up)("q-card-section"),f=(0,i.up)("q-input"),p=(0,i.up)("q-separator"),v=(0,i.up)("q-btn"),S=(0,i.up)("q-card-actions"),b=(0,i.up)("q-form"),Z=(0,i.up)("q-card"),w=(0,i.up)("q-page");return(0,i.wg)(),(0,i.j4)(w,{class:"row items-center justify-evenly"},{default:(0,i.w5)((()=>[(0,i.Wm)("div",a,[(0,i.Wm)(Z,{class:"my-card bg-myOrange text-white"},{default:(0,i.w5)((()=>[(0,i.Wm)(b,{onSubmit:e[2]||(e[2]=e=>t.handleGotoCockpit())},{default:(0,i.w5)((()=>[(0,i.Wm)(h,null,{default:(0,i.w5)((()=>[o,l])),_:1}),(0,i.Wm)(h,null,{default:(0,i.w5)((()=>[(0,i.Wm)("div",c,[(0,i.Wm)("div",s,[(0,i.Wm)(f,{outlined:"","bg-color":"white",class:"q-pb-lg",modelValue:t.flightTime,"onUpdate:modelValue":e[1]||(e[1]=e=>t.flightTime=e),modelModifiers:{number:!0},type:"number",label:"Flugzeit"},{append:(0,i.w5)((()=>[u])),_:1},8,["modelValue"])])]),r])),_:1}),(0,i.Wm)(p,{dark:""}),(0,i.Wm)(S,{align:"center"},{default:(0,i.w5)((()=>[(0,i.Wm)(v,{class:"full-width",flat:"",disable:t.flightTime<=0,type:"submit",label:"Zum Cockpit"},null,8,["disable"])])),_:1})])),_:1})])),_:1})])])),_:1})}var g=n(1959),d=n(9582),h=n(6516),f=function(t,e,n,i){function a(t){return t instanceof n?t:new n((function(e){e(t)}))}return new(n||(n=Promise))((function(n,o){function l(t){try{s(i.next(t))}catch(e){o(e)}}function c(t){try{s(i["throw"](t))}catch(e){o(e)}}function s(t){t.done?n(t.value):a(t.value).then(l,c)}s((i=i.apply(t,e||[])).next())}))};const p=(0,i.aZ)({name:"InitCockpitPage",components:{},setup(){const t=(0,d.tv)(),{commitSetY:e,commitSetX:n,commitSetStartDistance:i,getVelocityXY:a}=(0,h.Z)(),o=(0,g.iH)(30);function l(){return f(this,void 0,void 0,(function*(){const l=a.value*o.value*60;i(l),e(l),n(0),yield t.push({name:"Cockpit"})}))}return{handleGotoCockpit:l,flightTime:o}}});var v=n(4379),S=n(151),b=n(8689),Z=n(5589),w=n(1206),y=n(5869),M=n(9367),X=n(9892),Y=n(7518),F=n.n(Y);p.render=m;const k=p;F()(p,"components",{QPage:v.Z,QCard:S.Z,QForm:b.Z,QCardSection:Z.Z,QInput:w.Z,QSeparator:y.Z,QCardActions:M.Z,QBtn:X.Z})}}]);